
/*
import 'dart:ffi';

import 'package:flutter/material.dart';
import 'package:animated_text_kit/animated_text_kit.dart';
import 'package:convex_bottom_bar/convex_bottom_bar.dart';

void main() {
  runApp(
    MaterialApp(
      title: 'Named Routes Demo',
      // Start the app with the "/" named route. In this case, the app starts
      // on the FirstScreen widget.
      initialRoute: '/',
      routes: {
        // When navigating to the "/" route, build the FirstScreen widget.
        '/': (context) => const FirstScreen(),
        // When navigating to the "/second" route, build the SecondScreen widget.
        '/second': (context) => const SecondScreen(),
        '/third': (context) => const ThScreen(),
      },
    ),
  );
}

// first display
class FirstScreen extends StatelessWidget {
  const FirstScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      //appBar: AppBar(
      //  title: const Text('First Screen'),
     // ),
      body:
      Padding(padding: const EdgeInsets.all(0.0),

        child: Container(
          color: Colors.lightBlue,

          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            //crossAxisAlignment: CrossAxisAlignment.stretch,


            children: [

              //first input text
              Container(
                margin: const EdgeInsets.only(left: 40.0, right: 40.0, top: 40.0, bottom: 10.0),
                decoration: BoxDecoration(
                  //border:Border.all(
                  //width:1,
                  //color:Colors.lightGreen,
                  // ),
                  borderRadius: BorderRadius.circular(9),
                  gradient: LinearGradient(
                      colors:[
                        Colors.lightBlueAccent,
                        Colors.lightGreenAccent,
                        Colors.lightBlueAccent,
                      ]
                  ),
                ),
                child: TextField(
                  decoration: InputDecoration(
                      hintText: "Ваше имя"
                  ),
                  textAlign: TextAlign.center,
                ),
              ),

              //second input text
              Container(
                margin: const EdgeInsets.only(left: 40.0, right: 40.0, top: 10.0, bottom: 10.0),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(9),
                  gradient: LinearGradient(
                      colors:[
                        Colors.lightBlueAccent,
                        Colors.lightGreenAccent,
                        Colors.lightBlueAccent,
                      ]
                  ),
                ),
                child: TextField(


                  decoration: InputDecoration(
                      hintText: "Пароль"
                  ),
                  textAlign: TextAlign.center,
                ),
              ),

              // button
              Container(
                  margin: const EdgeInsets.only(left: 40.0, right: 40.0, top: 30.0, bottom: 10.0),


                  child: ElevatedButton(onPressed: () { Navigator.pushNamed(context, '/second'); },
                      child: Text('ВХОД'),


                      style: ButtonStyle(
                        padding: MaterialStatePropertyAll(EdgeInsets.all(20)),
                        backgroundColor: MaterialStateProperty.all(Colors.cyanAccent),
                        overlayColor: MaterialStateProperty.all(Colors.green),
                        textStyle: MaterialStateProperty.all(
                          const TextStyle(fontSize: 20),
                          //primary: Colors.redAccent,
                          //backgroundColor: MaterialStatePropertyAll<Color>(Colors.cyanAccent),
                          //padding: MaterialStateProperty.all(EdgeInsets.all(20.0),
                        ),
                        shape: MaterialStateProperty.all<RoundedRectangleBorder>(
                          RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(9.0),
                          ),
                        ),

                      )

                  )
              ),


            ],

          ),

        ),

      ),
    );
  }
}

// second display
class SecondScreen extends StatelessWidget {
  const SecondScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      //appBar: AppBar(
       // title: const Text('Second Screen'),
      //),
      body: Center(
        child: ElevatedButton(onPressed: () { Navigator.pushNamed(context, '/third'); },
      child: Text('ВХОД'),
    )
    )
    );
  }
}

/*
//third display of boss
const _kPages = <String, IconData>{
  'Пироговский': Icons.home,
  'Пушкино': Icons.account_balance_outlined,
  'Ростов': Icons.sunny,
  //'message': Icons.message,
  //'people': Icons.people,
};

class ThirdScreen extends StatefulWidget {
  const ThirdScreen({super.key});

  @override
  _ConvexAppExampleState createState() => _ConvexAppExampleState();
}
*/

/*
class _ConvexAppExampleState extends State<ThirdScreen> {
  TabStyle _tabStyle = TabStyle.reactCircle;

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 5,
      initialIndex: 2,
      child: Scaffold(
        body: Column(
          children: [
            //_buildStyleSelector(),
            const Divider(),
            Expanded(
              child: TabBarView(
                children: [  //отображение главного экрана
                    Container(margin: const EdgeInsets.only(
                        left: 40.0, right: 40.0, top: 40.0, bottom: 10.0),
                      decoration: BoxDecoration(
                        //border:Border.all(
                        //width:1,
                        //color:Colors.lightGreen,
                        // ),
                        borderRadius: BorderRadius.circular(9),
                        gradient: LinearGradient(
                            colors: [
                              Colors.lightBlueAccent,
                              Colors.lightGreenAccent,
                              Colors.lightBlueAccent,
                            ]
                        ),
                      ),
                      child: TextField(
                        decoration: InputDecoration(
                            hintText: "Ваше имя"
                        ),
                        textAlign: TextAlign.center,
                      ),
                    ),




                  //for (final icon in _kPages.values) Icon(icon, size: 164),
                ],
              ),
            ),
          ],
        ),
        bottomNavigationBar: ConvexAppBar.badge(
          // Optional badge argument: keys are tab indices, values can be
          // String, IconData, Color or Widget.
          /*badge=*/
          const <int, dynamic>{7: '99+'},
          style: _tabStyle,
          items: <TabItem>[
            for (final entry in _kPages.entries)
              TabItem(icon: entry.value, title: entry.key),
          ],
          onTap: (int i) => print('click index=$i'),
        ),
      ),
    );
  }
*/




//Стиль анимационной кнопки
/*
  Widget _buildStyleSelector() {
    final dropdown = DropdownButton<TabStyle>(
      value: _tabStyle,
      onChanged: (newStyle) {
        if (newStyle != null) setState(() => _tabStyle = newStyle);
      },
      items: [
        for (final style in TabStyle.values)
          DropdownMenuItem(
            value: style,
            child: Text(style.toString()),
          )
      ],
    );

  */
/*  return ListTile(
      contentPadding: const EdgeInsets.all(8),
      title: const Text('appbar style:'),
      trailing: dropdown,
    );

  */

// }
//}
//}


//--------------------------
//новый вариант меню
int selectedpage =0;
final _pageNo = [Home() , Favorite() , CartPage() , ProfilePage()];

class ThScreen extends StatelessWidget {
  const ThScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      //appBar: AppBar(
      // title: const Text('Second Screen'),
      //),
      body:_pageNo[selectedpage],
      bottomNavigationBar: ConvexAppBar(
        items: [
          TabItem(icon: Icons.home, title: 'Home'),
          TabItem(icon: Icons.favorite, title: 'Favorite'),
          TabItem(icon: Icons.shopping_cart, title: 'Cart'),
          TabItem(icon: Icons.person, title: 'Profile'),
        ],
        initialActiveIndex: selectedpage,
        onTap: (int index){
          setState(() {
            selectedpage = index;
          });
        },
      ),


    );
  }
}



class Home extends StatefulWidget {
  const Home({Key? key}) : super(key: key);

  @override
  _HomeState createState() => _HomeState();
}

class _HomeState extends State<Home> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text('Home Page',
          style: TextStyle(
              fontSize: 20,
              fontWeight: FontWeight.bold
          ),),
      ),
    );
  }
}


class Favorite extends StatefulWidget {
  const Favorite({Key? key}) : super(key: key);

  @override
  _FavoriteState createState() => _FavoriteState();
}

class _FavoriteState extends State<Favorite> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.greenAccent,
      body: Center(
          child: Text('Favorite Page',
            style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold
            ),
          )),
    );
  }
}



class CartPage extends StatefulWidget {
  const CartPage({Key? key}) : super(key: key);

  @override
  _CartPageState createState() => _CartPageState();
}

class _CartPageState extends State<CartPage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.pink.shade100,
      body: Center(
          child: Text('Cart Page',
            style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold
            ),)),
    );
  }
}


class ProfilePage extends StatefulWidget {
  const ProfilePage({Key? key}) : super(key: key);

  @override
  _ProfilePageState createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.yellow,
      body: Center(
          child: Text('Profile Page',
            style: TextStyle(
                fontSize: 20,
                fontWeight: FontWeight.bold
            ),)),
    );  }
}

